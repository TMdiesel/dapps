/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DemoPaymaster,
  DemoPaymasterInterface,
} from "../../../contracts/paymaster/DemoPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "UserWhitelisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "addToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositFor",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actualUserOpFeePerGas",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedUsers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405162000f3138038062000f318339810160408190526100319161018c565b80338061005957604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6100628161007e565b5061006c816100ce565b6001600160a01b0316608052506101de565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516301ffc9a760e01b815263122a0e9b60e31b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa158015610119573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013d91906101bc565b6101895760405162461bcd60e51b815260206004820152601e60248201527f49456e747279506f696e7420696e74657266616365206d69736d6174636800006044820152606401610050565b50565b60006020828403121561019e57600080fd5b81516001600160a01b03811681146101b557600080fd5b9392505050565b6000602082840312156101ce57600080fd5b815180151581146101b557600080fd5b608051610d066200022b6000396000818161026801528181610450015281816104e701528181610663015281816106fd0152818161076d015281816107fa01526109110152610d066000f3fe6080604052600436106101025760003560e01c8063aa67c91911610095578063c399ec8811610064578063c399ec88146102bf578063d0e30db0146102d4578063e43252d7146102dc578063f2fde38b146102fc578063f621cc481461031c57600080fd5b8063aa67c91914610243578063b0d691fe14610256578063bb9fe6bf1461028a578063c23a5cea1461029f57600080fd5b806370a08231116100d157806370a08231146101a1578063715018a6146101dc5780637c627b21146101f15780638da5cb5b1461021157600080fd5b80630396cb6014610117578063205c28781461012a5780632e1a7d4d1461014a57806352b7512c1461016a57600080fd5b36610112576101103361035c565b005b600080fd5b610110610125366004610a90565b61042e565b34801561013657600080fd5b50610110610145366004610ad2565b6104b9565b34801561015657600080fd5b50610110610165366004610afe565b61052b565b34801561017657600080fd5b5061018a610185366004610b17565b610605565b604051610198929190610b6b565b60405180910390f35b3480156101ad57600080fd5b506101ce6101bc366004610bc0565b60016020526000908152604090205481565b604051908152602001610198565b3480156101e857600080fd5b50610110610629565b3480156101fd57600080fd5b5061011061020c366004610bdd565b61063d565b34801561021d57600080fd5b506000546001600160a01b03165b6040516001600160a01b039091168152602001610198565b610110610251366004610bc0565b61035c565b34801561026257600080fd5b5061022b7f000000000000000000000000000000000000000000000000000000000000000081565b34801561029657600080fd5b50610110610659565b3480156102ab57600080fd5b506101106102ba366004610bc0565b6106d6565b3480156102cb57600080fd5b506101ce610755565b6101106107e5565b3480156102e857600080fd5b506101106102f7366004610bc0565b610847565b34801561030857600080fd5b50610110610317366004610bc0565b61089b565b34801561032857600080fd5b5061034c610337366004610bc0565b60026020526000908152604090205460ff1681565b6040519015158152602001610198565b600034116103bf5760405162461bcd60e51b815260206004820152602560248201527f4465706f73697420616d6f756e74206d75737420626520677265617465722074604482015264068616e20360dc1b60648201526084015b60405180910390fd5b6001600160a01b038116600090815260016020526040812080543492906103e7908490610c8b565b90915550506040513481526001600160a01b038216907f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4906020015b60405180910390a250565b6104366108d9565b604051621cb65b60e51b815263ffffffff821660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690630396cb609034906024016000604051808303818588803b15801561049d57600080fd5b505af11580156104b1573d6000803e3d6000fd5b505050505050565b6104c16108d9565b60405163040b850f60e31b81526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063205c287890604401600060405180830381600087803b15801561049d57600080fd5b336000908152600160205260409020548111156105815760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064016103b6565b33600090815260016020526040812080548392906105a0908490610ca4565b9091555050604051339082156108fc029083906000818181858888f193505050501580156105d2573d6000803e3d6000fd5b5060405181815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d590602001610423565b60606000610611610906565b61061c858585610976565b915091505b935093915050565b6106316108d9565b61063b6000610a08565b565b610645610906565b6106528585858585610a58565b5050505050565b6106616108d9565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156106bc57600080fd5b505af11580156106d0573d6000803e3d6000fd5b50505050565b6106de6108d9565b60405163611d2e7560e11b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063c23a5cea90602401600060405180830381600087803b15801561074157600080fd5b505af1158015610652573d6000803e3d6000fd5b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156107bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e09190610cb7565b905090565b60405163b760faf960e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b760faf99034906024016000604051808303818588803b15801561074157600080fd5b61084f6108d9565b6001600160a01b038116600081815260026020526040808220805460ff19166001179055517f7409cb8e690bcd1487fd4fd27dad3fa92388d201ba6f953631d6d6b26299f8499190a250565b6108a36108d9565b6001600160a01b0381166108cd57604051631e4fbdf760e01b8152600060048201526024016103b6565b6108d681610a08565b50565b6000546001600160a01b0316331461063b5760405163118cdaa760e01b81523360048201526024016103b6565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461063b5760405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08115b9d1c9e541bda5b9d605a1b60448201526064016103b6565b6060600060028161098a6020880188610bc0565b6001600160a01b0316815260208101919091526040016000205460ff166109c35750506040805160208101909152600081526001610621565b6109d06020860186610bc0565b604080516001600160a01b039092166020830152810184905260600160408051601f1981840301815291905295600095509350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60405162461bcd60e51b815260206004820152600d60248201526c6d757374206f7665727269646560981b60448201526064016103b6565b600060208284031215610aa257600080fd5b813563ffffffff81168114610ab657600080fd5b9392505050565b6001600160a01b03811681146108d657600080fd5b60008060408385031215610ae557600080fd5b8235610af081610abd565b946020939093013593505050565b600060208284031215610b1057600080fd5b5035919050565b600080600060608486031215610b2c57600080fd5b833567ffffffffffffffff811115610b4357600080fd5b84016101208187031215610b5657600080fd5b95602085013595506040909401359392505050565b604081526000835180604084015260005b81811015610b995760208187018101516060868401015201610b7c565b506000606082850101526060601f19601f8301168401019150508260208301529392505050565b600060208284031215610bd257600080fd5b8135610ab681610abd565b600080600080600060808688031215610bf557600080fd5b853560038110610c0457600080fd5b9450602086013567ffffffffffffffff80821115610c2157600080fd5b818801915088601f830112610c3557600080fd5b813581811115610c4457600080fd5b896020828501011115610c5657600080fd5b9699602092909201985095966040810135965060600135945092505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610c9e57610c9e610c75565b92915050565b81810381811115610c9e57610c9e610c75565b600060208284031215610cc957600080fd5b505191905056fea2646970667358221220b46a8159f9b1dfa5066681e69104f6bda6257c29f468e73712d393d4d494ddda64736f6c63430008170033";

type DemoPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DemoPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DemoPaymaster__factory extends ContractFactory {
  constructor(...args: DemoPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _entryPoint: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_entryPoint, overrides || {});
  }
  override deploy(
    _entryPoint: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_entryPoint, overrides || {}) as Promise<
      DemoPaymaster & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DemoPaymaster__factory {
    return super.connect(runner) as DemoPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DemoPaymasterInterface {
    return new Interface(_abi) as DemoPaymasterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DemoPaymaster {
    return new Contract(address, _abi, runner) as unknown as DemoPaymaster;
  }
}
